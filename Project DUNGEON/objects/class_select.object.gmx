<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>class_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
index_timer = 0;
class[0] = "Knight";
sprite[0] = knight_title_spr;
class[1] = "Mage";
sprite[1] = wizard_title_spr;
class[2] = "Rogue";
sprite[2] = rogue_title_spr;
class[3] = "Monk";
sprite[3] = monk_title_spr;
index = 1;
arrow_timer = 0;
index_image = 0;
wait = true;

new_sprite = 0;
new_index = 0;

scrolling = false;
dir = 0;
spd = 1;
spd_timer = 0;

center_x = 128;
new_x = 0;


clickable = 0;
pressed = 0;


og_x = 0;


timer = 0;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{

index_timer += 1;
if(index_timer == 6){
    index_timer = 0;
    index_image += 1;
    if(index_image == 4){
        index_image = 0;
    }
}

if(scrolling == true){
    //Control speed flow
    spd_timer += 1;
    if(spd_timer &lt; 10){
        spd += 3;
    }
    
    
    //Move sprites
    //Left scrolling
    if(dir == 1){
        center_x += spd;
        new_x += spd;
        if(new_x &gt;= 128){
            new_x = 128;
            spd = 1;
            index = new_index;
            scrolling = false;
            center_x = 128;
            arrow_timer = 25;
        }
    }
    //Right scrolling
    else{
        center_x -= spd;
        new_x -= spd;
        if(new_x &lt;= 128){
            new_x = 128;
            spd = 1;
            index = new_index;
            scrolling = false;
            center_x = 128;
            arrow_timer = 25;
        }
    }
    
    
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
if(wait == false and scrolling == false){

if(clickable and mouse_check_button_pressed(mb_left)){
    pressed = 1;
    og_x = mouse_x;    
}



if(keyboard_check_pressed(vk_left) or keyboard_check_pressed(vk_right) or (pressed and (mouse_check_button_released(mb_left) or mouse_x &lt; og_x-20 or mouse_x &gt; og_x+20))){
    pressed = 0;
    
    //Class Selected, start game
    if((mouse_check_button_released(mb_left)) and (mouse_x &gt;= og_x-20 or mouse_x &lt;= og_x + 20)){
        //instance_create(0,0,Fade_Box);
        if(new_room = endless_dungeon_room){
            instance_create(0,0,Fade_Box);
            Fade_Box.type = "endless";
        }
        else{
            instance_create(0,0,oval_tran);
        }
        global.player_class = class[index];
        wait = true;
    }
    
    //Object Scrolled, scroll to other class based on direction
    else{
        scrolling = true;
        spd_timer = 0;
        //Scroll left
        if(mouse_x &lt; og_x or keyboard_check_pressed(vk_right)){
            center_x = 127;
            new_x = 243;
            dir = -1;
            if(index == 0){
                new_index = 3;
                new_sprite = sprite[3];
            }
            else{
                new_index = index - 1;
                new_sprite = sprite[index-1];
            }
        }
        //Scroll right
        else{
            dir = 1;
            center_x = 129;
            new_x = 17;
            if(index == 3){
                new_index = 0;
                new_sprite = sprite[0];
            }
            else{
                new_index = index + 1;
                new_sprite = sprite[index+1];
            }        
        }
    
    }
    

}

//Check for the arrows being pressed
if(scrolling == false and mouse_check_button_pressed(mb_left) and mouse_check_button_released(mb_left)){
    if(mouse_y &lt; 160 and mouse_y &gt; 100){
        //Scroll Left
        if(mouse_x &lt; 110 and mouse_x &gt; 70){
            center_x = 127;
            new_x = 243;
            dir = -1;
            if(index == 0){
                new_index = 2;
                new_sprite = sprite[2];
            }
            else{
                new_index = index - 1;
                new_sprite = sprite[index-1];
            }
        }
        //Scroll Right
        if(mouse_x &lt; 250 and mouse_x &gt; 210){
            dir = 1;
            center_x = 129;
            new_x = 17;
            if(index == 2){
                new_index = 0;
                new_sprite = sprite[0];
            }
            else{
                new_index = index + 1;
                new_sprite = sprite[index+1];
            }  
        }
    }
}









}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
arrow_timer += 1;
if(arrow_timer == 40){
    arrow_timer = 0;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
clickable = 0;
pressed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
clickable = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
