<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
h = ds_grid_height(global.endless_grid);
results = ds_grid_create(2,h);
ds_grid_copy(results,global.endless_grid);
ds_grid_destroy(global.endless_grid);
ready = false;
r_score = 0;

timer = 0;
current = -1;
done = -1;

new_high = false;

killer = dark_lord_spr;


ready_2 = false;
ready_timer = 0;


//Determine the killer
var g = ds_grid_height(results)-1;

while(g &gt; 0){
    var checkers = ds_grid_get(results,1,g);
    if(checkers == "killed"){
        killer = ds_grid_get(results,0,g);
        g = 0;
    }
    g-= 1;
}



multiplier = 1.0;

seg = 1;



}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
if(done == -1){
    timer += 1;
    if(timer == 5){
        timer = 0;
        
        //Check the result of the current fight
        var cur_fight = ds_grid_get(results,0,current);
        var cur_res = ds_grid_get(results,1,current);
        
        if(cur_fight != 0){
            if(cur_res == "win"){
                if(cur_fight == dark_lord_spr or cur_fight == dark_lord_magic_spr){r_score += round(100*multiplier);}
                else{r_score += round(10*multiplier);}
                multiplier += 0.1;
            }
            else if(cur_res == "run"){
                var increase = multiplier - 1.0;
                if(increase == 0){increase = 1;}
                else{increase = round(increase * 10);}
                r_score += increase; 
                multiplier = 1.0;
            }
            
        }
        
        current += 1;
        
              
        if(current == h-1){done = 0;}    
        else{
            //Make sure there is at least one entry still to go
            var found = false;
            var cc = current;
            while(cc &lt; h){
                var check = ds_grid_get(results,0,cc);
                if(check != 0){
                    found = true;
                    cc = h;
                }
                cc += 1;
            }
            if(!found){done = 0;}
        }
        
        //if(current == 20 * seg){
      //      y -= 200;
     //       seg += 1;
     //   }
           
    }
}

if(done &gt;= 0 and ready == false){
    done += 1;
    if(done &gt;= 20){
        ready = true;
        
        //Create Share Buttons
        var t_b = instance_create(130,161,Share);
        t_b.image_index = 0;
        var f_b = instance_create(170,161,Share);
        f_b.image_index = 1;
        
        
        //Check to see if we have a new high score
        if(r_score &gt; global.high_score){
            global.high_score = r_score;
            new_high = true;
            high_timer = 0;
        }
    }
    
    Generate_Number_Array(r_score);
}

if(new_high == true){
    high_timer += 1;
    if(high_timer == 20){
        high_timer = 0;
    }
}


if(ready == true){

    if(ready_timer &lt; 40){
        ready_timer += 1;
        if(ready_timer == 40){
            ready_2 = true;
            //Create the buttons 
            var again_button = instance_create(32,124,results_buttons);
            again_button.image_index = 0;
            var leave_button = instance_create(209,124,results_buttons);
            leave_button.image_index = 1;
            
        }
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
ds_grid_destroy(results);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>526</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_font</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>12</kind>
            <font>results_font</font>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
if(current &gt;= 0){
    var c = 0;
    
    var sx_w = 5;
    var sy_w = 44;
    
    var sx_r = 165;
    var sy_r = 44;
    
    var draw_x_r = sx_r;
    var draw_y_r = sy_r;

    var draw_x_w = sx_w;
    var draw_y_w = sy_w;

    
    while(c &lt;= current){
        var cur_spr = ds_grid_get(results,0,c);
        if(cur_spr != 0){
            var check_r = ds_grid_get(results,1,c);
            var color = c_white;
            if(check_r == "run"){var draw_x = draw_x_r;var draw_y = draw_y_r;}
            else if(check_r == "win"){var draw_x = draw_x_w;var draw_y = draw_y_w;}
            else{var draw_x = -100;var draw_y = -100;}
            draw_sprite_ext(cur_spr,0,x + draw_x,y + draw_y,0.5,0.5,0,color,1);
            if(check_r == "run"){
                draw_x_r += 15;
                if(draw_x_r &gt; sx_r+(15*8)){
                    draw_x_r = sx_r;
                    draw_y_r += 20;
                }
            }
            else if(check_r == "win"){
                draw_x_w += 15;
                if(draw_x_w &gt; sx_w+(15*8)){
                    draw_x_w = sx_w;
                    draw_y_w += 20;
                }
            }
        }
        c += 1;
    }


}



draw_sprite(endless_results_spr,1,0,0);
draw_set_halign(fa_left);
draw_set_colour(c_white);
draw_text(3,5,"SCORE");
draw_set_halign(fa_right);
draw_text(315,5,string(r_score));



if(ready == true){
    //Draw Final Page
    draw_sprite(endless_results_killer,0,0,0);
    
    //Draw Killer
    draw_sprite(killer,0,128,67);
    
    //Draw Score
    var test_size = 1;
    var first_x = 112 + 44;
    
    //Draw High Score Message
    if(new_high == true){
        if(high_timer &lt;= 10){
            draw_sprite(high_score_spr,0,14,15);
            draw_sprite(high_score_spr,0,222,15);
        }
    }
    
    
    //Determine the X coordinate of the leftmost digit
    while(test_size &lt; num_digits){
        first_x -= 4;
        test_size += 1;
    }
    
    //Actually Draw the score here
    var d = 0;
    while(d &lt; num_digits){
        draw_sprite(stat_number_spr,num_array[d],first_x,26);
        first_x += 8;
        d += 1;
    }
    

}






}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
