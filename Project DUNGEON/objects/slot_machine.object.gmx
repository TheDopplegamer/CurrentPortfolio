<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{

//Status of the three slots
//--------------------------
//wait - waiting for the machine to start
//running - going at full speed
//slowing - still going, but also decelerating
//stop - Not moving, already selected stat
slot_1 = "wait";
slot_2 = "wait";
slot_3 = "wait";
end_timer = 0;
timer_1 = 0;
timer_2 = 0;
timer_3 = 0;
flee = false;
slot_x = x;
slot_y = y;
alpha = 1.0;
scale = 1.0;

//The speed that the slots spin
speed_1 = 4;
speed_2 = 4;
speed_3 = 4;


//Coordinates of the slot icons
str_1 = 18;
mag_1 = 36;
def_1 = 54;
res_1 = -36;
lck_1 = -18;
dam_1 = 0;

str_2 = 18;
mag_2 = 36;
def_2 = 54;
res_2 = -36;
lck_2 = -18;
dam_2 = 0;

str_3 = 18;
mag_3 = 36;
def_3 = 54;
res_3 = -36;
lck_3 = -18;
dam_3 = 0;


//The four gates
//---------------
//gate 1 - The icons start here
//gate 2 - The icons become primed here
//gate 3 - The icons lose priming here
//gate 4 - The icons end here
gate_1 = -36;
gate_2 = 0;
gate_3 = 16;
gate_4 = 72;

//The results of the spin
result_1 = "";
result_2 = "";
result_3 = "";

//Check to see if we need to adjust a slot
pressed = 0;


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = Dungeon.spec_x;
y = Dungeon.spec_y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{


if(keyboard_check_pressed(vk_space)){
    pressed = 1;
}

//Check to see if the machine has been pressed
if(pressed and slot_1 != "wait"){
    pressed = 0;
    if(slot_1 == "running"){slot_1 = "slowing";}
    else if(slot_2 == "running"){slot_2 = "slowing";}
    else if(slot_3 == "running"){slot_3 = "slowing";}
}
else if(pressed){
    pressed = 0;
    slot_1 = "running";
    slot_2 = "running";
    slot_3 = "running";
    Dungeon.player_1.HP -= 1;
    if(Dungeon.player_1.HP &lt; 1){Dungeon.player_1.HP = 1;}
}


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
//Slots are moving
if(slot_1 == "slowing" or slot_1 == "running"){
    //Move the icons down based on speed
    //Then adjust them based on their positions to the gates
    //Check to see if they are primed

    var prev_stat = str_1;
    
    
    
    str_1 += speed_1;
    if(str_1 &gt;= gate_4){str_1 = (gate_1 + (speed_1 -(gate_4-prev_stat)));}
    else if(str_1 + 10 &gt; gate_2 and str_1 + 10 &lt; gate_3){result_1 = "STR"}
    
    var prev_stat = mag_1;
    mag_1 += speed_1;
    if(mag_1 &gt;= gate_4){mag_1 = (gate_1 + (speed_1 -(gate_4-prev_stat)));}
    else if(mag_1 + 10 &gt; gate_2 and mag_1 + 10 &lt; gate_3){result_1 = "MAG"}
    
    var prev_stat = def_1;
    def_1 += speed_1;
    if(def_1 &gt;= gate_4){def_1 = (gate_1 + (speed_1 -(gate_4-prev_stat)));}
    else if(def_1 + 10 &gt; gate_2 and def_1 + 10 &lt; gate_3){result_1 = "DEF"}
    
    var prev_stat = res_1;
    res_1 += speed_1;
    if(res_1 &gt;= gate_4){res_1 = (gate_1 + (speed_1 -(gate_4-prev_stat)));}
    else if(res_1 + 10 &gt; gate_2 and res_1 + 10 &lt; gate_3){result_1 = "RES"}
    
    var prev_stat = lck_1;
    lck_1 += speed_1;
    if(lck_1 &gt;= gate_4){lck_1 = (gate_1 + (speed_1 -(gate_4-prev_stat)));}
    else if(lck_1 + 10 &gt; gate_2 and lck_1 + 10 &lt; gate_3){result_1 = "LCK"}
    
    var prev_stat = dam_1;
    dam_1 += speed_1;
    if(dam_1 &gt;= gate_4){dam_1 = (gate_1 + (speed_1 -(gate_4-prev_stat)));}
    else if(dam_1 + 10 &gt; gate_2 and dam_1 + 10 &lt; gate_3){result_1 = "DAM"}
    
    //If we're slowing down, lower the speed
    if(slot_1 == "slowing"){
        timer_1 += 1;
        if(timer_1 == 8){
            timer_1 = 0;
            if(speed_1 &gt; 0){
                speed_1 -= 1;
                if(speed_1 == 0){
                         if(result_1 == "STR"){var speed_check = str_1;}
                    else if(result_1 == "MAG"){var speed_check = mag_1;}
                    else if(result_1 == "DEF"){var speed_check = def_1;}
                    else if(result_1 == "RES"){var speed_check = res_1;}
                    else if(result_1 == "LCK"){var speed_check = lck_1;}
                    else if(result_1 == "DAM"){var speed_check = dam_1;}
                    
                         if(((0-speed_check)/4) == round((0-speed_check)/4)){new_speed_1 = ((0-speed_check)/4);}
                    else if(((0-speed_check)/3) == round((0-speed_check)/3)){new_speed_1 = ((0-speed_check)/3);}
                    else if(((0-speed_check)/5) == round((0-speed_check)/5)){new_speed_1 = ((0-speed_check)/5);}
                    else if(((0-speed_check)/2) == round((0-speed_check)/2)){new_speed_1 = ((0-speed_check)/2);}
                    else                                                    {new_speed_1 = ((0-speed_check)/1);}
                    
                }
            }
            //If the speed has reached 0, set the slot mode to stop
            if(speed_1 == 0 and ((result_1 == "STR" and str_1 == 0) or (result_1 == "MAG" and mag_1 == 0) or (result_1 == "DEF" and def_1 == 0) or (result_1 == "RES" and res_1 == 0) or (result_1 == "LCK" and lck_1 == 0) or (result_1 == "DAM" and dam_1 == 0))        ){
                slot_1 = "stop";
                if(result_1 == "STR"){
                    str_1 = 0;
                    mag_1 = 18;
                    def_1 = 36;
                    res_1 = 54;
                    lck_1 = -36;
                    dam_1 = -18;
                }
                else if(result_1 == "MAG"){
                    str_1 = -18;
                    mag_1 = 0;
                    def_1 = 18;
                    res_1 = 36;
                    lck_1 = 54;
                    dam_1 = -36;
                }
                else if(result_1 == "DEF"){
                    str_1 = -36;
                    mag_1 = -18;
                    def_1 = 0;
                    res_1 = 18;
                    lck_1 = 36;
                    dam_1 = 54;
                }
                else if(result_1 == "RES"){
                    str_1 = 54;
                    mag_1 = -36;
                    def_1 = -18;
                    res_1 = 0;
                    lck_1 = 18;
                    dam_1 = 36;
                }
                else if(result_1 == "LCK"){
                    str_1 = 36;
                    mag_1 = 54;
                    def_1 = -36;
                    res_1 = -18;
                    lck_1 = 0;
                    dam_1 = 18;
                }
                else if(result_1 == "DAM"){
                    str_1 = 18;
                    mag_1 = 36;
                    def_1 = 54;
                    res_1 = -36;
                    lck_1 = -18;
                    dam_1 = 0;
                }
            }
            else if(speed_1 == 0){
                if(result_1 == "STR"){
                   str_1 += new_speed_1;dam_1 += new_speed_1;mag_1 += new_speed_1;
                }
                else if(result_1 == "MAG"){
                   mag_1 += new_speed_1;def_1 += new_speed_1;str_1 += new_speed_1;
                }
                else if(result_1 == "DEF"){
                    def_1 += new_speed_1;res_1 += new_speed_1;mag_1 += new_speed_1;
                }
                else if(result_1 == "RES"){
                    res_1 += new_speed_1;def_1 += new_speed_1;lck_1 += new_speed_1;
                }
                else if(result_1 == "LCK"){
                    lck_1 += new_speed_1;res_1 += new_speed_1;dam_1 += new_speed_1;
                }
                else if(result_1 == "DAM"){
                    dam_1 += new_speed_1;lck_1 += new_speed_1;str_1 += new_speed_1;
                }
            }
        }    
    }
}

if(slot_2 == "slowing" or slot_2 == "running"){
    //Move the icons down based on speed
    //Then adjust them based on their positions to the gates
    //Check to see if they are primed

    var prev_stat = str_2;
    str_2 += speed_2;
    if(str_2 &gt;= gate_4){str_2 = (gate_1 + (speed_2 -(gate_4-prev_stat)));}
    else if(str_2 + 10 &gt; gate_2 and str_2 + 10 &lt; gate_3){result_2 = "STR"}
    
    var prev_stat = mag_2;
    mag_2 += speed_2;
    if(mag_2 &gt;= gate_4){mag_2 = (gate_1 + (speed_2 -(gate_4-prev_stat)));}
    else if(mag_2 + 10 &gt; gate_2 and mag_2 + 10 &lt; gate_3){result_2 = "MAG"}
    
    var prev_stat = def_2;
    def_2 += speed_2;
    if(def_2 &gt;= gate_4){def_2 = (gate_1 + (speed_2 -(gate_4-prev_stat)));}
    else if(def_2 + 10 &gt; gate_2 and def_2 + 10 &lt; gate_3){result_2 = "DEF"}
    
    var prev_stat = res_2;
    res_2 += speed_2;
    if(res_2 &gt;= gate_4){res_2 = (gate_1 + (speed_2 -(gate_4-prev_stat)));}
    else if(res_2 + 10 &gt; gate_2 and res_2 + 10 &lt; gate_3){result_2 = "RES"}
    
    var prev_stat = lck_2;
    lck_2 += speed_2;
    if(lck_2 &gt;= gate_4){lck_2 = (gate_1 + (speed_2 -(gate_4-prev_stat)));}
    else if(lck_2 + 10 &gt; gate_2 and lck_2 + 10 &lt; gate_3){result_2 = "LCK"}
    
    var prev_stat = dam_2;
    dam_2 += speed_2;
    if(dam_2 &gt;= gate_4){dam_2 = (gate_1 + (speed_2 -(gate_4-prev_stat)));}
    else if(dam_2 + 10 &gt; gate_2 and dam_2 + 10 &lt; gate_3){result_2 = "DAM"}
    
    //If we're slowing down, lower the speed
    if(slot_2 == "slowing"){
        timer_2 += 1;
        if(timer_2 == 8){
            timer_2 = 0;
            if(speed_2 &gt; 0){
                speed_2 -= 1;
                if(speed_2 == 0){
                         if(result_2 == "STR"){var speed_check = str_2;}
                    else if(result_2 == "MAG"){var speed_check = mag_2;}
                    else if(result_2 == "DEF"){var speed_check = def_2;}
                    else if(result_2 == "RES"){var speed_check = res_2;}
                    else if(result_2 == "LCK"){var speed_check = lck_2;}
                    else if(result_2 == "DAM"){var speed_check = dam_2;}
                    
                         if(((0-speed_check)/4) == round((0-speed_check)/4)){new_speed_2 = ((0-speed_check)/4);}
                    else if(((0-speed_check)/3) == round((0-speed_check)/3)){new_speed_2 = ((0-speed_check)/3);}
                    else if(((0-speed_check)/5) == round((0-speed_check)/5)){new_speed_2 = ((0-speed_check)/5);}
                    else if(((0-speed_check)/2) == round((0-speed_check)/2)){new_speed_2 = ((0-speed_check)/2);}
                    else                                                    {new_speed_2 = ((0-speed_check)/1);}
                }
            }
            //If the speed has reached 0, set the slot mode to stop
            if(speed_2 == 0 and ((result_2 == "STR" and str_2 == 0) or (result_2 == "MAG" and mag_2 == 0) or (result_2 == "DEF" and def_2 == 0) or (result_2 == "RES" and res_2 == 0) or (result_2 == "LCK" and lck_2 == 0) or (result_2 == "DAM" and dam_2 == 0))  ){
                slot_2 = "stop";
                if(result_2 == "STR"){
                    str_2 = 0;
                    mag_2 = 18;
                    def_2 = 36;
                    res_2 = 54;
                    lck_2 = -36;
                    dam_2 = -18;
                }
                else if(result_2 == "MAG"){
                    str_2 = -18;
                    mag_2 = 0;
                    def_2 = 18;
                    res_2 = 36;
                    lck_2 = 54;
                    dam_2 = -36;
                }
                else if(result_2 == "DEF"){
                    str_2 = -36;
                    mag_2 = -18;
                    def_2 = 0;
                    res_2 = 18;
                    lck_2 = 36;
                    dam_2 = 54;
                }
                else if(result_2 == "RES"){
                    str_2 = 54;
                    mag_2 = -36;
                    def_2 = -18;
                    res_2 = 0;
                    lck_2 = 18;
                    dam_2 = 36;
                }
                else if(result_2 == "LCK"){
                    str_2 = 36;
                    mag_2 = 54;
                    def_2 = -36;
                    res_2 = -18;
                    lck_2 = 0;
                    dam_2 = 18;
                }
                else if(result_2 == "DAM"){
                    str_2 = 18;
                    mag_2 = 36;
                    def_2 = 54;
                    res_2 = -36;
                    lck_2 = -18;
                    dam_2 = 0;
                }
            }
            else if(speed_2 == 0){
                if(result_2 == "STR"){
                    str_2 += new_speed_2;dam_2 += new_speed_2;mag_2 += new_speed_2;
                }
                else if(result_2 == "MAG"){
                  mag_2 += new_speed_2;def_2 += new_speed_2;str_2 += new_speed_2;
                }
                else if(result_2 == "DEF"){
                  def_2 += new_speed_2;res_2 += new_speed_2;mag_2 += new_speed_2;
                }
                else if(result_2 == "RES"){
                    res_2 += new_speed_2;def_2 += new_speed_2;lck_2 += new_speed_2;
                }
                else if(result_2 == "LCK"){
                    lck_2 += new_speed_2;res_2 += new_speed_2;dam_2 += new_speed_2;
                }
                else if(result_2 == "DAM"){
                    dam_2 += new_speed_2;lck_2 += new_speed_2;str_2 += new_speed_2;
                }
            }
        }
    }
}

if(slot_3 == "slowing" or slot_3 == "running"){
    //Move the icons down based on speed
    //Then adjust them based on their positions to the gates
    //Check to see if they are primed
    var prev_stat = str_3;
    str_3 += speed_3;
    if(str_3 &gt;= gate_4){str_3 = (gate_1 + (speed_3 -(gate_4-prev_stat)));}
    else if(str_3 + 10 &gt; gate_2 and str_3 + 10 &lt; gate_3){result_3 = "STR"}
    
    var prev_stat = mag_3;
    mag_3 += speed_3;
    if(mag_3 &gt;= gate_4){mag_3 = (gate_1 + (speed_3 -(gate_4-prev_stat)));}
    else if(mag_3 + 10 &gt; gate_2 and mag_3 + 10 &lt; gate_3){result_3 = "MAG"}
    
    var prev_stat = def_3;
    def_3 += speed_3;
    if(def_3 &gt;= gate_4){def_3 = (gate_1 + (speed_3 -(gate_4-prev_stat)));}
    else if(def_3 + 10 &gt; gate_2 and def_3 + 10 &lt; gate_3){result_3 = "DEF"}
    
    var prev_stat = res_3;
    res_3 += speed_3;
    if(res_3 &gt;= gate_4){res_3 = (gate_1 + (speed_3 -(gate_4-prev_stat)));}
    else if(res_3 + 10 &gt; gate_2 and res_3 + 10 &lt; gate_3){result_3 = "RES"}
    
    var prev_stat = lck_3;
    lck_3 += speed_3;
    if(lck_3 &gt;= gate_4){lck_3 = (gate_1 + (speed_3 -(gate_4-prev_stat)));}
    else if(lck_3 + 10 &gt; gate_2 and lck_3 + 10 &lt; gate_3){result_3 = "LCK"}
    
    var prev_stat = dam_3;
    dam_3 += speed_3;
    if(dam_3 &gt;= gate_4){dam_3 = (gate_1 + (speed_3 -(gate_4-prev_stat)));}
    else if(dam_3 + 10 &gt; gate_2 and dam_3 + 10 &lt; gate_3){result_3 = "DAM"}
    
    //If we're slowing down, lower the speed
    if(slot_3 == "slowing"){
        timer_3 += 1;
        if(timer_3 == 8){
            timer_3 = 0;
            if(speed_3 &gt; 0){
                speed_3 -= 1;
                if(speed_3 == 0){
                         if(result_3 == "STR"){var speed_check = str_3;}
                    else if(result_3 == "MAG"){var speed_check = mag_3;}
                    else if(result_3 == "DEF"){var speed_check = def_3;}
                    else if(result_3 == "RES"){var speed_check = res_3;}
                    else if(result_3 == "LCK"){var speed_check = lck_3;}
                    else if(result_3 == "DAM"){var speed_check = dam_3;}
                    
                         if(((0-speed_check)/4) == round((0-speed_check)/4)){new_speed_3 = ((0-speed_check)/4);}
                    else if(((0-speed_check)/3) == round((0-speed_check)/3)){new_speed_3 = ((0-speed_check)/3);}
                    else if(((0-speed_check)/5) == round((0-speed_check)/5)){new_speed_3 = ((0-speed_check)/5);}
                    else if(((0-speed_check)/2) == round((0-speed_check)/2)){new_speed_3 = ((0-speed_check)/2);}
                    else                                                    {new_speed_3 = ((0-speed_check)/1);}
                }
            }
            //If the speed has reached 0, set the slot mode to stop
            if(speed_3 == 0 and ((result_3 == "STR" and str_3 == 0) or (result_3 == "MAG" and mag_3 == 0) or (result_3 == "DEF" and def_3 == 0) or (result_3 == "RES" and res_3 == 0) or (result_3 == "LCK" and lck_3 == 0) or (result_3 == "DAM" and dam_3 == 0))){
                slot_3 = "stop";
                if(result_3 == "STR"){
                    str_3 = 0;
                    mag_3 = 18;
                    def_3 = 36;
                    res_3 = 54;
                    lck_3 = -36;
                    dam_3 = -18;
                }
                else if(result_3 == "MAG"){
                    str_3 = -18;
                    mag_3 = 0;
                    def_3 = 18;
                    res_3 = 36;
                    lck_3 = 54;
                    dam_3 = -36;
                }
                else if(result_3 == "DEF"){
                    str_3 = -36;
                    mag_3 = -18;
                    def_3 = 0;
                    res_3 = 18;
                    lck_3 = 36;
                    dam_3 = 54;
                }
                else if(result_3 == "RES"){
                    str_3 = 54;
                    mag_3 = -36;
                    def_3 = -18;
                    res_3 = 0;
                    lck_3 = 18;
                    dam_3 = 36;
                }
                else if(result_3 == "LCK"){
                    str_3 = 36;
                    mag_3 = 54;
                    def_3 = -36;
                    res_3 = -18;
                    lck_3 = 0;
                    dam_3 = 18;
                }
                else if(result_3 == "DAM"){
                    str_3 = 18;
                    mag_3 = 36;
                    def_3 = 54;
                    res_3 = -36;
                    lck_3 = -18;
                    dam_3 = 0;
                }
            }
            else if(speed_3 == 0){
                if(result_3 == "STR"){
                   str_3 += new_speed_3;dam_3 += new_speed_3;mag_3 += new_speed_3;
                }
                else if(result_3 == "MAG"){
                    mag_3 += new_speed_3;def_3 += new_speed_3;str_3 += new_speed_3;
                }
                else if(result_3 == "DEF"){
                   def_3 += new_speed_3;res_3 += new_speed_3;mag_3 += new_speed_3;
                }
                else if(result_3 == "RES"){
                   res_3 += new_speed_3;def_3 += new_speed_3;lck_3 += new_speed_3;
                }
                else if(result_3 == "LCK"){
                    lck_3 += new_speed_3;res_3 += new_speed_3;dam_3 += new_speed_3;
                }
                else if(result_3 == "DAM"){
                    dam_3 += new_speed_3;lck_3 += new_speed_3;str_3 += new_speed_3;
                }
            }
        }
    }
}







}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
if(slot_1 == "stop" and slot_2 == "stop" and slot_3 == "stop"){
    end_timer += 1;
    //Apply Level Up
    if(end_timer == 3){
        var str_amount = 0;
        var def_amount = 0;
        var mag_amount = 0;
        var res_amount = 0;
        var lck_amount = 0;
        var dam_amount = 0;
        if(result_1 == "STR"){str_amount += 3;}   
        else if(result_1 == "MAG"){mag_amount += 3;}
        else if(result_1 == "DEF"){def_amount += 3;}
        else if(result_1 == "RES"){res_amount += 3;}
        else if(result_1 == "LCK"){lck_amount += 3;}
        else if(result_1 == "DAM"){dam_amount += 3;}
        
        if(result_2 == "STR"){str_amount += 3;}   
        else if(result_2 == "MAG"){mag_amount += 3;}
        else if(result_2 == "DEF"){def_amount += 3;}
        else if(result_2 == "RES"){res_amount += 3;}
        else if(result_2 == "LCK"){lck_amount += 3;}
        else if(result_2 == "DAM"){dam_amount += 3;} 
        
        if(result_3 == "STR"){str_amount += 3;}   
        else if(result_3 == "MAG"){mag_amount += 3;}
        else if(result_3 == "DEF"){def_amount += 3;}
        else if(result_3 == "RES"){res_amount += 3;}
        else if(result_3 == "LCK"){lck_amount += 3;}
        else if(result_3 == "DAM"){dam_amount += 3;}
        
        if(str_amount == 9){str_amount = 15;}
        else if(mag_amount == 9){mag_amount = 15;}
        else if(def_amount == 9){def_amount = 15;}
        else if(res_amount == 9){res_amount = 15;}
        else if(lck_amount == 9){lck_amount = 15;}
        else if(dam_amount == 9){dam_amount = 15;}
        
        
        
        //Change the transformed button back to normal
        with(Button){
            if(transformed == true){
                transformed = false;
                image_index = 1;
            }
        }
        
        if(dam_amount == 15){
            crit = true;
            movement = 6;
        }
        else{
            crit = false;
            movement = 3;
        }

        Dungeon.player_1.strength += str_amount;
        if(Dungeon.player_1.strength &gt; 99){Dungeon.player_1.strength = 99;}
    
        Dungeon.player_1.magic += mag_amount;
        if(Dungeon.player_1.magic &gt; 99){Dungeon.player_1.magic = 99;}

        Dungeon.player_1.defense += def_amount;
        if(Dungeon.player_1.defense &gt; 99){Dungeon.player_1.defense = 99;}

        Dungeon.player_1.res += res_amount;
        if(Dungeon.player_1.res &gt; 99){Dungeon.player_1.res = 99;}

        Dungeon.player_1.luck += lck_amount;
        if(Dungeon.player_1.luck &gt; 99){Dungeon.player_1.luck = 99;}
        
        
        lvl_up = instance_create(130,90,level_up_particle);
        
        if(str_amount != 0){
            lvl_up.stat = "STR";
            lvl_up.value = str_amount;
            lvl_up.mag_value = mag_amount;
            lvl_up.def_value = def_amount;
            lvl_up.res_value = res_amount;
            lvl_up.lck_value = lck_amount;
        }
        else if(mag_amount != 0){
            lvl_up.stat = "MAG";
            lvl_up.value = mag_amount;
            lvl_up.def_value = def_amount;
            lvl_up.res_value = res_amount;
            lvl_up.lck_value = lck_amount;
        }
        else if(def_amount != 0){
            lvl_up.stat = "DEF";
            lvl_up.value = def_amount;
            lvl_up.res_value = res_amount;
            lvl_up.lck_value = lck_amount;
        }
        else if(res_amount != 0){
            lvl_up.stat = "RES";
            lvl_up.value = res_amount;
            lvl_up.lck_value = lck_amount;
        }
        else if(lck_amount != 0){
            lvl_up.stat = "LCK";
            lvl_up.value = lck_amount;
        }
        else{
            lvl_up.value = 0;
            lvl_up.stat = "NONE";
        }
        
        damage = dam_amount;
        Dungeon.damage = dam_amount;
    }
    else if(end_timer == 6){
    
        if(damage &gt; 0){
        if(global.damage_display == 3 or global.damage_display == 2){
            instance_create(134,115,hp_bar);
            hp_bar.target = Dungeon.player_1;
        }
        //Create damage particle
        if(global.damage_display == 3 or global.damage_display == 1){
            damage_effect = instance_create(130,90,damage_particle);
            damage_effect.value = damage;
        }
        }
    
        Dungeon.player_1.HP -= damage;
        if(Dungeon.player_1.HP &lt;= 0){Dungeon.player_1.HP = 1;}
    }
    if(end_timer &gt;= 15){
        alpha -= 0.05;
        if(alpha == 0){
            Dungeon.in_slot = false;
            Dungeon.current_y += 1;
            
            //Calulate new Player level
            if(Dungeon.player_1.attack_type == "physical"){var noff = Dungeon.player_1.strength;}
            else{var noff = Dungeon.player_1.magic;}

            var ndef = Dungeon.player_1.defense;
            var nres = Dungeon.player_1.res;
            var tdeff = round((ndef+nres)/2);

            Dungeon.player_1.level = round((noff+tdeff)/2);
            
            
            
            instance_destroy();
        }
    }
    
    
    if(end_timer &gt;= 3 and damage &gt; 0){
    
    if(end_timer == 3){
        Dungeon.player_1.cur_x += movement;
    }
    else if(end_timer == 5){
        Dungeon.player_1.cur_x -= movement;
    }
    else if(end_timer == 5){
        Dungeon.player_1.cur_y -= movement*2;
    }
    else if(end_timer == 8){
        Dungeon.player_1.cur_x -= movement;
    }
    else if(end_timer == 10 and !crit){
        Dungeon.player_1.cur_x += movement;
    }
    else if(end_timer == 10){
        Dungeon.player_1.cur_x += movement*2;
    }
    else if(end_timer == 13 and !crit){
        Dungeon.player_1.cur_x += movement;
    }
    else if(end_timer == 15){
        Dungeon.player_1.cur_x -= movement;
    }
    
    
    }
    
    
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
if(flee == true){
    scale -= (1/15);   
    x += (32/15);
    y += (32/15);
    if(scale &lt; 0){
        scale = 0;
        instance_destroy();
    } 
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
//Draw Icons
if(flee == false){
if(slot_1 != "stop"){
    if(str_1 &gt; -19 and str_1 &lt; 19){draw_sprite_ext(slot_icon,0,x+4,y+28+str_1,scale,scale,0,c_white,alpha);}
    if(mag_1 &gt; -19 and mag_1 &lt; 19){draw_sprite_ext(slot_icon,1,x+4,y+28+mag_1,scale,scale,0,c_white,alpha);}
    if(def_1 &gt; -19 and def_1 &lt; 19){draw_sprite_ext(slot_icon,2,x+4,y+28+def_1,scale,scale,0,c_white,alpha);}
    if(res_1 &gt; -19 and res_1 &lt; 19){draw_sprite_ext(slot_icon,3,x+4,y+28+res_1,scale,scale,0,c_white,alpha);}
    if(lck_1 &gt; -19 and lck_1 &lt; 19){draw_sprite_ext(slot_icon,4,x+4,y+28+lck_1,scale,scale,0,c_white,alpha);}
    if(dam_1 &gt; -19 and dam_1 &lt; 19){draw_sprite_ext(slot_icon,5,x+4,y+28+dam_1,scale,scale,0,c_white,alpha);}
}
else{
    if(result_1 == "STR"){draw_sprite_ext(slot_icon,0,x+4,y+28+str_1,scale,scale,0,c_white,alpha);}
    else if(result_1 == "MAG"){draw_sprite_ext(slot_icon,1,x+4,y+28+mag_1,scale,scale,0,c_white,alpha);}
    else if(result_1 == "DEF"){draw_sprite_ext(slot_icon,2,x+4,y+28+def_1,scale,scale,0,c_white,alpha);}
    else if(result_1 == "RES"){draw_sprite_ext(slot_icon,3,x+4,y+28+res_1,scale,scale,0,c_white,alpha);}
    else if(result_1 == "LCK"){draw_sprite_ext(slot_icon,4,x+4,y+28+lck_1,scale,scale,0,c_white,alpha);}
    else if(result_1 == "DAM"){draw_sprite_ext(slot_icon,5,x+4,y+28+dam_1,scale,scale,0,c_white,alpha);}
}

if(slot_2 != "stop"){
    if(str_2 &gt; -19 and str_2 &lt; 19){draw_sprite_ext(slot_icon,0,x+26,y+28+str_2,scale,scale,0,c_white,alpha);}
    if(mag_2 &gt; -19 and mag_2 &lt; 19){draw_sprite_ext(slot_icon,1,x+26,y+28+mag_2,scale,scale,0,c_white,alpha);}
    if(def_2 &gt; -19 and def_2 &lt; 19){draw_sprite_ext(slot_icon,2,x+26,y+28+def_2,scale,scale,0,c_white,alpha);}
    if(res_2 &gt; -19 and res_2 &lt; 19){draw_sprite_ext(slot_icon,3,x+26,y+28+res_2,scale,scale,0,c_white,alpha);}
    if(lck_2 &gt; -19 and lck_2 &lt; 19){draw_sprite_ext(slot_icon,4,x+26,y+28+lck_2,scale,scale,0,c_white,alpha);}
    if(dam_2 &gt; -19 and dam_2 &lt; 19){draw_sprite_ext(slot_icon,5,x+26,y+28+dam_2,scale,scale,0,c_white,alpha);}
}
else{
    if(result_2 == "STR"){draw_sprite_ext(slot_icon,0,x+26,y+28+str_2,scale,scale,0,c_white,alpha);}
    else if(result_2 == "MAG"){draw_sprite_ext(slot_icon,1,x+26,y+28+mag_2,scale,scale,0,c_white,alpha);}
    else if(result_2 == "DEF"){draw_sprite_ext(slot_icon,2,x+26,y+28+def_2,scale,scale,0,c_white,alpha);}
    else if(result_2 == "RES"){draw_sprite_ext(slot_icon,3,x+26,y+28+res_2,scale,scale,0,c_white,alpha);}
    else if(result_2 == "LCK"){draw_sprite_ext(slot_icon,4,x+26,y+28+lck_2,scale,scale,0,c_white,alpha);}
    else if(result_2 == "DAM"){draw_sprite_ext(slot_icon,5,x+26,y+28+dam_2,scale,scale,0,c_white,alpha);}
}

if(slot_3 != "stop"){
    if(str_3 &gt; -19 and str_3 &lt; 19){draw_sprite_ext(slot_icon,0,x+48,y+28+str_3,scale,scale,0,c_white,alpha);}
    if(mag_3 &gt; -19 and mag_3 &lt; 19){draw_sprite_ext(slot_icon,1,x+48,y+28+mag_3,scale,scale,0,c_white,alpha);}
    if(def_3 &gt; -19 and def_3 &lt; 19){draw_sprite_ext(slot_icon,2,x+48,y+28+def_3,scale,scale,0,c_white,alpha);}
    if(res_3 &gt; -19 and res_3 &lt; 19){draw_sprite_ext(slot_icon,3,x+48,y+28+res_3,scale,scale,0,c_white,alpha);}
    if(lck_3 &gt; -19 and lck_3 &lt; 19){draw_sprite_ext(slot_icon,4,x+48,y+28+lck_3,scale,scale,0,c_white,alpha);}
    if(dam_3 &gt; -19 and dam_3 &lt; 19){draw_sprite_ext(slot_icon,5,x+48,y+28+dam_3,scale,scale,0,c_white,alpha);}
}
else{
    if(result_3 == "STR"){draw_sprite_ext(slot_icon,0,x+48,y+28+str_3,scale,scale,0,c_white,alpha);}
    else if(result_3 == "MAG"){draw_sprite_ext(slot_icon,1,x+48,y+28+mag_3,scale,scale,0,c_white,alpha);}
    else if(result_3 == "DEF"){draw_sprite_ext(slot_icon,2,x+48,y+28+def_3,scale,scale,0,c_white,alpha);}
    else if(result_3 == "RES"){draw_sprite_ext(slot_icon,3,x+48,y+28+res_3,scale,scale,0,c_white,alpha);}
    else if(result_3 == "LCK"){draw_sprite_ext(slot_icon,4,x+48,y+28+lck_3,scale,scale,0,c_white,alpha);}
    else if(result_3 == "DAM"){draw_sprite_ext(slot_icon,5,x+48,y+28+dam_3,scale,scale,0,c_white,alpha);}
}
    draw_sprite_ext(slot_machine_spr,0,x,y,scale,scale,0,c_white,alpha);
}
else{
    draw_sprite_ext(slot_machine_spr,1,x,y,scale,scale,0,c_white,alpha);
}

//draw_sprite_ext(slot_divider,0,x-20,y+gate_1);
//draw_sprite_ext(slot_divider,0,x-20,y+gate_2);
//draw_sprite_ext(slot_divider,0,x-20,y+gate_3);
//draw_sprite_ext(slot_divider,0,x-20,y+gate_4);


//draw_sprite_ext(slot_divider,0,x-20,y+50);
//draw_sprite_ext(slot_divider,0,x-20,y+70);



}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
