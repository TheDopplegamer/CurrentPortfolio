<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>button_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>testing_buttons</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
left_pressed = false;
right_pressed = false;
image_speed = 0;
image_index = 0;
alpha = 1.0;
text = "";
click = 0;
selected = 0;
transformed = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
//If there is a slot that has already been pulled once, make sure the right button becomes a force press
if(instance_exists(slot_machine) and transformed == false){
    if(slot_machine.slot_1 == "running" or slot_machine.slot_3 == "running" or slot_machine.slot_3 == "running"){
        if(image_index == 1){
            transformed = true;
            image_index = 0;
        }   
    } 
}


if(instance_exists(Dungeon_Endless) and Dungeon.current_y == Dungeon.length-1 and transformed == false){
    if(image_index == 1){
        transformed = true;
        image_index = 0;
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
if(Dungeon.init == false and Dungeon.spec_enter == false and Stat_Screen.active == false and Text_Box.display_log == false and Dungeon.player_1.fleeing == false and ((Dungeon.battling == true and Dungeon.player_2.enter == false) or Dungeon.battling == false and Dungeon.heal_timer == -1)){

//Check if the button is being pressed
if(Dungeon.in_trap == false and Dungeon.in_shop == false and Dungeon.in_chest == false and Dungeon.in_prayer == false and Dungeon.in_bomb == false and Dungeon.in_slot == false and Dungeon.battle_phase == "choose" and Dungeon.game_over == false and alpha == 1.0){
    if(global.touch_button and click == 1){selected = 1;}
        if(selected == 1 and global.release_button){
            selected = 0;
            if(image_index == 0){
                Dungeon.battle_phase = "attack 1";
            }
            else if(image_index == 1){
                Dungeon.battle_phase = "flee";
                Dungeon.flee_timer = 0;
            }
        }
}

//Button selection during a trap
else if(Dungeon.in_trap == true and Dungeon.trap_animate == false){
    if(global.touch_button and click == 1){selected = 1;}
    if((left_pressed or right_pressed) or (selected == 1 and global.release_button)){
        selected = 0;
        //Trap entered, move to next level
        if((image_index == 0 and left_pressed) or image_index == 0){
            left_pressed = false;
            right_pressed = false;
            //Decide whether or not to take an HP penalty
            if(Dungeon.trap_type == "STR"){
                if(Dungeon.player_1.strength &lt; Dungeon.trap_level){
                    Dungeon.last_was_trap = true;
                    //Dungeon.player_1.HP -= 5;
                    if(Dungeon.player_1.HP &lt;= 0){Dungeon.player_1.HP = 0;}        
                }
            }
            else if(Dungeon.trap_type == "DEF"){
                if(Dungeon.player_1.defense &lt; Dungeon.trap_level){
                    //Dungeon.player_1.HP -= 5;
                    Dungeon.last_was_trap = true;
                    if(Dungeon.player_1.HP &lt;= 0){Dungeon.player_1.HP = 0;}        
                }
            }
            else if(Dungeon.trap_type == "MAG"){
                if(Dungeon.player_1.magic &lt; Dungeon.trap_level){
                    //Dungeon.player_1.HP -= 5;
                    Dungeon.last_was_trap = true;
                    if(Dungeon.player_1.HP &lt;= 0){Dungeon.player_1.HP = 0;}        
                }
            }
            else if(Dungeon.trap_type == "RES"){
                if(Dungeon.player_1.res &lt; Dungeon.trap_level){
                    //Dungeon.player_1.HP -= 5;
                    Dungeon.last_was_trap = true;
                    if(Dungeon.player_1.HP &lt;= 0){Dungeon.player_1.HP = 0;}        
                }
            }
            else if(Dungeon.trap_type == "LCK"){
                if(Dungeon.player_1.luck &lt; Dungeon.trap_level){
                    //Dungeon.player_1.HP -= 5;
                    Dungeon.last_was_trap = true;
                    if(Dungeon.player_1.HP &lt;= 0){Dungeon.player_1.HP = 0;}        
                }
            }
            Text_Box.new_text = "You enter...";
            if(Dungeon.slime_prayed == true){
                Dungeon.slime_prayed = false;
            }
            Update_Text();
            Dungeon.trap_animate = true;
        
        }
        else if((image_index == 1 and right_pressed) or image_index == 1){
            left_pressed = false;
            right_pressed = false;
            Dungeon.flee_timer = 0;
            Text_Box.new_text = "You leave it alone...";
            Update_Text();
            Dungeon.player_1.fleeing = true;
        }
    }
}

//Button selection during a shop
else if(Dungeon.in_shop == true and Dungeon.animate_shop == false){
    if(global.touch_button and click == 1){selected = 1;}
    if((left_pressed or right_pressed) or (selected == 1 and global.release_button)){
        selected = 0;
        Dungeon.timer = 0;
        //Shop used, execute appropriate action based on shop type (all we need to do here is set shop flag in dungeon)
        if((image_index == 0 and left_pressed) or image_index == 0){
            left_pressed = false;
            right_pressed = false;
            Dungeon.animate_shop = true;            
            Dungeon.absorb_dir = 1;
        }
        //Shop ignored, or different path taken for absorb shops
        else if((image_index == 1 and right_pressed) or image_index == 1){
            left_pressed = false;
            Dungeon.flee_timer = 0;
            right_pressed = false;
            //If the shop is a reverse type, ignore shop, moving on to next floor
            if(Dungeon.shop_type == "reverse"){
                Dungeon.player_1.fleeing = true;
                Text_Box.new_text = "You leave the hermit alone...";
                Update_Text();
            }
            //If the shop is an absorb type, set the absorb flag for dungeon, absorbing stat 2 into stat 1
            else if(Dungeon.shop_type == "absorb"){Dungeon.animate_shop = true;Dungeon.absorb_dir = 2;}
        }     
    }
}


//Button selection during a chest
else if(Dungeon.in_chest == true and Dungeon.animate_chest == false){
    if(global.touch_button and click == 1){selected = 1;}
    if((left_pressed or right_pressed) or (selected == 1 and global.release_button)){
        selected = 0;
        //Chest opened,send flag to dungeon
        if((image_index == 0 and left_pressed) or image_index == 0){
            left_pressed = false;
            right_pressed = false;
            Dungeon.chest_opened = true;        
        }
        //Chest ignored
        else if((image_index == 1 and right_pressed) or image_index == 1){
            Dungeon.flee_timer = 0;
            left_pressed = false;
            right_pressed = false;       
            Dungeon.player_1.fleeing = true;
            Text_Box.new_text = "You leave the chest alone...";
            Update_Text();
        }
    }
}

//Button selection during a bomb
else if(Dungeon.in_bomb == true and Dungeon.animate_bomb == false){
    if(global.touch_button and click == 1){selected = 1;}
    if((left_pressed or right_pressed) or (selected == 1 and global.release_button)){
        selected = 0;
        timer = 0;
        
        if(Dungeon.bomb_wait == false){
        //Enter left into code ( 0 )
        if((image_index == 0 and left_pressed) or image_index == 0){
            left_pressed = false;
            right_pressed = false;
            //First calulate which number of the code this is for
            var ci = 0;
            while(ci &lt; 4){
                if(Dungeon.bomb_entered[ci] == false){break;}
                ci += 1;
            }
            //Second, find what the actual code number for the bomb at this index is
            var code = Dungeon.bomb_code[ci];
            //If the code entered matches the bomb code, set the flag for this index
            if(code == 0){
                Dungeon.bomb_entered[ci] = true;
                //If that was the last number, set the bomb to be defused
                if(ci == 3){Dungeon.animate_bomb = true;}
            }
            //If the code is incorrect, add a strike and reset entered codes
            else{
                Dungeon.bomb_entered[0] = false;
                Dungeon.bomb_entered[1] = false;
                Dungeon.bomb_entered[2] = false;
                Dungeon.bomb_entered[3] = false;
                Dungeon.bomb_strikes += 0;
                //Set the bomb delay
                Dungeon.bomb_wait = true;
                Dungeon.bomb_wait_timer = room_speed * 2;
                //If we have gone over the allowed number of strikes, set the bomb to explode!
                if(Dungeon.bomb_strikes &gt; Dungeon.bomb_level){Dungeon.bomb_timer = 1;}
            }
        }
        //Enter right into code ( 1 )
        else if((image_index == 1 and right_pressed) or image_index == 1){
            left_pressed = false;
            right_pressed = false;
            //First calulate which number of the code this is for
            var ci = 0;
            while(ci &lt; 4){
                if(Dungeon.bomb_entered[ci] == false){break;}
                ci += 1;
            }
            //Second, find what the actual code number for the bomb at this index is
            var code = Dungeon.bomb_code[ci];
            //If the code entered matches the bomb code, set the flag for this index
            if(code == 1){
                Dungeon.bomb_entered[ci] = true;
                //If that was the last number, set the bomb to be defused
                if(ci == 3){Dungeon.animate_bomb = true;}
            }
            //If the code is incorrect, add a strike and reset entered codes
            else{
                Dungeon.bomb_entered[0] = false;
                Dungeon.bomb_entered[1] = false;
                Dungeon.bomb_entered[2] = false;
                Dungeon.bomb_entered[3] = false;
                Dungeon.bomb_strikes += 0;
                //Set the bomb delay
                Dungeon.bomb_wait = true;
                Dungeon.bomb_wait_timer = room_speed * 2;
                //If we have gone over the allowed number of strikes, set the bomb to explode!
                if(Dungeon.bomb_strikes &gt; Dungeon.bomb_level){Dungeon.bomb_timer = 1;}
            }
        }
        }
        
        else{
            left_pressed = false;
            right_pressed = false;    
        }
    }
    
}    


//Button selection during a slot machine
else if(Dungeon.in_slot == true){
    if(global.touch_button and click == 1){selected = 1;}
    if((left_pressed or right_pressed) or (selected == 1 and global.release_button)){
        left_pressed = false;
        right_pressed = false;
        //Pull slot
        if((image_index == 0 and left_pressed) or image_index == 0){
            slot_machine.pressed = 1;
        }
        //Leave it alone
        else if((image_index == 1 and right_pressed) or image_index == 1){
            slot_machine.flee = true;
            Dungeon.flee_timer = 0;
            Text_Box.new_text = "You leave it alone...";
            Update_Text();
            Dungeon.player_1.fleeing = true;    
        }
    }    
}

//Button selection during a prayer
else if(Dungeon.in_prayer == true and Dungeon.prayed == false){
    if(global.touch_button and click == 1){selected = 1;}
    if((left_pressed or right_pressed) or (selected == 1 and global.release_button)){
        left_pressed = false;
        right_pressed = false;
        //Pray to statue
        if((image_index == 0 and left_pressed) or image_index == 0){
            Dungeon.prayed = true;
        }
        //Leave it alone
        else if((image_index == 1 and right_pressed) or image_index == 1){
            Dungeon.flee_timer = 0;
            Text_Box.new_text = "You leave it alone...";
            Update_Text();
            Dungeon.player_1.fleeing = true;  
        }
    }
}

else{
    left_pressed = false;
    right_pressed = false;
}        

    

}

else{
    left_pressed = false;
    right_pressed = false;
}  


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
click = 0;
selected = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
click = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
//Change text for chests
if(ds_grid_get(Dungeon.map,Dungeon.current_x,Dungeon.current_y) == 3){
    if(selected == 0){draw_sprite(chest_button_set_spr,image_index,x,y);}
    else{draw_sprite(chest_button_set_spr,image_index,x,y+1);}
}

//Change text for traps
else if(ds_grid_get(Dungeon.map,Dungeon.current_x,Dungeon.current_y) == 5){
    if(selected == 0){draw_sprite(trap_button_set_spr,image_index,x,y);}
    else{draw_sprite(trap_button_set_spr,image_index,x,y+1);}
}
//Change text for slots
else if(ds_grid_get(Dungeon.map,Dungeon.current_x,Dungeon.current_y) == 8){
    if(selected == 0){draw_sprite(slot_button_set_spr,image_index,x,y);}
    else{draw_sprite(slot_button_set_spr,image_index,x,y+1);}
}
//Change text for prayer
else if(ds_grid_get(Dungeon.map,Dungeon.current_x,Dungeon.current_y) == 10){
    if(selected == 0){draw_sprite(pray_button_set_spr,image_index,x,y);}
    else{draw_sprite(pray_button_set_spr,image_index,x,y+1);}
}
//Change text for shops
else if(ds_grid_get(Dungeon.map,Dungeon.current_x,Dungeon.current_y) == 6){
    //Reversal Shop
    if(Dungeon.shop_type == "reverse"){
        if(selected == 0){draw_sprite(reverse_shop_button_set_spr,image_index,x,y);}
        else{draw_sprite(reverse_shop_button_set_spr,image_index,x,y+1);}
    }
    //Absorb Shop
    else{
        if(image_index == 0){
            if(Dungeon.shop_stat_1 == "STR"){
                if(selected == 0){draw_sprite(absorb_shop_button_set_spr,0,x,y);}
                else{draw_sprite(absorb_shop_button_set_spr,0,x,y+1);}
            }
            else if(Dungeon.shop_stat_1 == "MAG"){
                if(selected == 0){draw_sprite(absorb_shop_button_set_spr,1,x,y);}
                else{draw_sprite(absorb_shop_button_set_spr,1,x,y+1);}
            }
            else if(Dungeon.shop_stat_1 == "DEF"){
                if(selected == 0){draw_sprite(absorb_shop_button_set_spr,2,x,y);}
                else{draw_sprite(absorb_shop_button_set_spr,2,x,y+1);}
            }
            else if(Dungeon.shop_stat_1 == "RES"){
                if(selected == 0){draw_sprite(absorb_shop_button_set_spr,3,x,y);}
                else{draw_sprite(absorb_shop_button_set_spr,3,x,y+1);}
            }
            else if(Dungeon.shop_stat_1 == "LCK"){
                if(selected == 0){draw_sprite(absorb_shop_button_set_spr,4,x,y);}
                else{draw_sprite(absorb_shop_button_set_spr,4,x,y+1);}
            }
        }
        else if(image_index == 1){
            if(Dungeon.shop_stat_2 == "STR"){
                if(selected == 0){draw_sprite(absorb_shop_button_set_spr,0,x,y);}
                else{draw_sprite(absorb_shop_button_set_spr,0,x,y+1);}
            }
            else if(Dungeon.shop_stat_2 == "MAG"){
                if(selected == 0){draw_sprite(absorb_shop_button_set_spr,1,x,y);}
                else{draw_sprite(absorb_shop_button_set_spr,1,x,y+1);}
            }
            else if(Dungeon.shop_stat_2 == "DEF"){
                if(selected == 0){draw_sprite(absorb_shop_button_set_spr,2,x,y);}
                else{draw_sprite(absorb_shop_button_set_spr,2,x,y+1);}
            }
            else if(Dungeon.shop_stat_2 == "RES"){
                if(selected == 0){draw_sprite(absorb_shop_button_set_spr,3,x,y);}
                else{draw_sprite(absorb_shop_button_set_spr,3,x,y+1);}
            }
            else if(Dungeon.shop_stat_2 == "LCK"){
                if(selected == 0){draw_sprite(absorb_shop_button_set_spr,4,x,y);}
                else{draw_sprite(absorb_shop_button_set_spr,4,x,y+1);}
            }
        }
    }
}

//Bomb 
else if(ds_grid_get(Dungeon.map,Dungeon.current_x,Dungeon.current_y) == 7){
    if(selected == 0){draw_sprite(bomb_button_set_spr,0,x,y);}
    else{draw_sprite(bomb_button_set_spr,0,x,y+1);}   
}

else{
    if(selected == 0){draw_sprite(button_spr,image_index,x,y);}
    else{draw_sprite(button_spr,image_index,x,y+1);}  
}    



}        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
if(image_index == 1 and (Dungeon.battle_phase == "choose" or Dungeon.in_trap == true or Dungeon.in_bomb == true or Dungeon.in_shop == true or Dungeon.in_chest == true or Dungeon.in_slot == true or Dungeon.in_prayer == true) and Dungeon.trap_animate == false and Dungeon.heal_timer == -1 and Dungeon.game_over == false and Dungeon.player_1.reset_flee_image == false){
    if( Dungeon.in_trap == true or Dungeon.in_shop == true or Dungeon.in_chest == true or Dungeon.in_bomb == true or Dungeon.in_slot == true or Dungeon.in_prayer == true){
        left_pressed = false;
        right_pressed = true;
    }
    else{
        Dungeon.battle_phase = "flee";
        Dungeon.flee_timer = 0;
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
if(image_index == 0 and (Dungeon.battle_phase == "choose" or Dungeon.in_trap == true or Dungeon.in_bomb == true or Dungeon.in_shop == true or Dungeon.in_chest == true or Dungeon.in_slot == true or Dungeon.in_prayer == true) and Dungeon.trap_animate == false and Dungeon.heal_timer == -1 and Dungeon.game_over == false and Dungeon.player_1.reset_flee_image == false){
    if( Dungeon.in_trap == true or Dungeon.in_shop == true or Dungeon.in_chest == true or Dungeon.in_bomb == true or Dungeon.in_slot == true or Dungeon.in_prayer == true){
        left_pressed = true;
        right_pressed = false;
    }
    else{
        Dungeon.battle_phase = "attack 1";
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
