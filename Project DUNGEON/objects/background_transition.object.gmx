<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    alpha = 0.0;
    spd = 0.05;
    depth = Dungeon.depth + 100000000;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(alpha == 0){
        audio_sound_gain(Dungeon.theme_music,0,700)
    }


    alpha += spd;
    
    if(alpha &gt; 1.2){
    
            //Make sure the background is correct
            if(Dungeon.trap_door == "standard"){
                background_index = 0;
            }
            else if(Dungeon.trap_door == "hell"){
                background_index = 2;
            }
            else if(Dungeon.trap_door == "chaos"){
                background_index = 3;
            }
            else if(Dungeon.trap_door == "treasury"){
                background_index = 1;
            }
    
    
    
            Dungeon.in_trap = false;
            Dungeon.current_y += 1;
            
            Dungeon.trap_animate = false;
            
            var find_index = 0;
            var index_found = false;
            while(index_found == false){
                if(Dungeon.floor_type[find_index] == Dungeon.trap_door){index_found = true;}
                else{find_index += 1;}    
            }
            
            audio_sound_gain(Dungeon.theme_music,global.volume/2.0,0);
            audio_stop_sound(Dungeon.theme_music);
            
            if(Dungeon.trap_door == "standard"){Dungeon.theme_music = dungeon_theme;}
            else if(Dungeon.trap_door == "hell"){Dungeon.theme_music = dungeon_theme_2;}
            else if(Dungeon.trap_door == "treasury"){Dungeon.theme_music = dungeon_theme_treasury;}
            else if(Dungeon.trap_door == "chaos"){Dungeon.theme_music = dungeon_theme_chaos;}
            audio_play_sound(Dungeon.theme_music,1,true);
            audio_set_master_gain(0,global.volume/2.0);
            audio_sound_gain(Dungeon.theme_music,global.volume/2.0,0);
            if(Dungeon.theme_music == dungeon_theme){
                audio_sound_gain(dungeon_theme,global.volume/3.0,0);
            }
            
            Dungeon.current_x = find_index;
    
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
